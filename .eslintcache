[{"/home/jack5341/jack5341/projects/invoice-printer/src/index.js":"1","/home/jack5341/jack5341/projects/invoice-printer/src/App.js":"2","/home/jack5341/jack5341/projects/invoice-printer/src/pages/homepage.js":"3","/home/jack5341/jack5341/projects/invoice-printer/src/components/upmenu/upmenu.jsx":"4","/home/jack5341/jack5341/projects/invoice-printer/src/components/content/content.jsx":"5","/home/jack5341/jack5341/projects/invoice-printer/src/containers/header/header.jsx":"6","/home/jack5341/jack5341/projects/invoice-printer/src/containers/listitem/listitem.jsx":"7","/home/jack5341/jack5341/projects/invoice-printer/src/containers/template-item/templateitem.jsx":"8","/home/jack5341/jack5341/projects/invoice-printer/src/containers/template-item/th-section/th.section.jsx":"9","/home/jack5341/jack5341/projects/invoice-printer/src/containers/template-item/td-section/td.section.jsx":"10"},{"size":313,"mtime":1611498876819,"results":"11","hashOfConfig":"12"},{"size":361,"mtime":1611764381824,"results":"13","hashOfConfig":"12"},{"size":635,"mtime":1611766652294,"results":"14","hashOfConfig":"12"},{"size":1885,"mtime":1611869142588,"results":"15","hashOfConfig":"12"},{"size":1436,"mtime":1611870425317,"results":"16","hashOfConfig":"12"},{"size":1018,"mtime":1611869678771,"results":"17","hashOfConfig":"12"},{"size":1780,"mtime":1611498876819,"results":"18","hashOfConfig":"12"},{"size":5163,"mtime":1611868545600,"results":"19","hashOfConfig":"12"},{"size":883,"mtime":1611778637092,"results":"20","hashOfConfig":"12"},{"size":146,"mtime":1611699445524,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"25h963",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"/home/jack5341/jack5341/projects/invoice-printer/src/index.js",[],["46","47"],"/home/jack5341/jack5341/projects/invoice-printer/src/App.js",[],"/home/jack5341/jack5341/projects/invoice-printer/src/pages/homepage.js",[],"/home/jack5341/jack5341/projects/invoice-printer/src/components/upmenu/upmenu.jsx",["48","49"],"/home/jack5341/jack5341/projects/invoice-printer/src/components/content/content.jsx",["50","51"],"/home/jack5341/jack5341/projects/invoice-printer/src/containers/header/header.jsx",["52"],"/home/jack5341/jack5341/projects/invoice-printer/src/containers/listitem/listitem.jsx",["53"],"import { Box,\n    Tooltip,\n    Table,\n    TableCaption,\n    Thead,\n    Tr,\n    Td,\n    Tbody,\n    Th,\n    Kbd,\n    SlideFade  \n} from \"@chakra-ui/react\"\n\nexport default function ListItemContainer(props){\n    return (\n        <SlideFade in={true} initialScale={0.7} >\n            <Tooltip hasArrow label=\"Click for print !\" placement=\"top\">\n                <a href=\"#\">\n                    <Box style={{overflowX: \"auto\"}} boxShadow=\"outline\" mt=\"5\" mb=\"5\" bg=\"#2866ca38\">\n                        <Table variant=\"simple\">\n                            <TableCaption>Invoice for {props.company} </TableCaption>\n                            <Thead>\n                                <Tr>\n                                    <Th>Company</Th>\n                                    <Th>Phone Number</Th>\n                                    <Th>Email</Th>\n                                    <Th>Product</Th>\n                                    <Th>Piece</Th>\n                                    <Th>Price</Th>\n                                </Tr>\n                            </Thead>\n                            <Tbody>\n                                <Tr>\n                                    <Td><Kbd>{props.company}</Kbd></Td>\n                                    <Td><Kbd>{props.phone}</Kbd></Td>\n                                    <Td><Kbd>{props.email}</Kbd></Td>\n                                    <Td><Kbd>{props.product}</Kbd></Td>\n                                    <Td><Kbd>{props.piece}</Kbd></Td>\n                                    <Td><Kbd>{props.price} €</Kbd></Td>\n                                </Tr>\n                            </Tbody>\n                        </Table>\n                    </Box>\n                </a>\n            </Tooltip>\n        </SlideFade>\n    )\n}","/home/jack5341/jack5341/projects/invoice-printer/src/containers/template-item/templateitem.jsx",["54","55","56"],"import { useState, useEffect } from 'react'\nimport {\n    Box,\n    Table,\n    TableCaption,\n    Thead,\n    Tr,\n    Td,\n    Th,\n    Icon,\n    Tbody,\n    Select,\n    Button,\n    Text,\n    Modal,\n    ModalOverlay,\n    ModalContent,\n    ModalHeader,\n    ModalFooter\n} from \"@chakra-ui/react\"\nimport { PlusSquareIcon } from '@chakra-ui/icons'\nimport { v4 as uuidv4 } from 'uuid'\n\n// Components\nimport ThSection from './th-section/th.section'\nimport TdSection from './td-section/td.section'\n\n// Styles\nimport \"./style.css\"\n\nexport default function TemplateItem() {\n\n    const [uniqueId, setUniqueId] = useState(null)\n    const [hide, setHide] = useState(true)\n\n    useEffect((e) => {\n        if (uniqueId) {\n            document.getElementById(uniqueId).remove()\n            document.getElementById(uniqueId).remove()\n        }\n    }, [uniqueId])\n\n    const [thList, setThList] = useState({\n        th: [{\n            element: <ThSection uniqueId={uuidv4()} />\n        },\n        {\n            element: <ThSection uniqueId={uuidv4()} />\n        }],\n        td: [{ element: <TdSection title=\"hello world\" /> },\n        {\n            element: <Td>\n                {\"Example\"}\n                <Select onChange={e => window.localStorage.setItem(\"list/\" + uuidv4(),e.target.value) } border=\"0px\">\n                    <option value=\"€\">€</option>\n                    <option value=\"$\">$</option>\n                </Select>\n            </Td>\n        }]\n    })\n\n    function addNewList(e) {\n        e.preventDefault()\n        const uniqueToken = uuidv4()\n        setThList({\n            th: [...thList.th, {\n                id: uniqueToken,\n                element: <ThSection uniqueId={uniqueToken} setUniqueId={setUniqueId} />\n            }],\n            td: [...thList.td, {\n                id: uniqueToken,\n                element: <TdSection uniqueId={uniqueToken} title=\"hello world\" id={uniqueToken} />\n            }]\n        })\n    }\n\n    return (\n        <>\n            <Modal size=\"xl\" onClose={!hide} isOpen={hide} isCentered>\n                <ModalOverlay />\n                <ModalContent>\n                    <ModalHeader>\n                        <Text\n                            pl=\"2\"\n                            bgGradient=\"linear(to-l, #7928CA,#2866ca)\"\n                            bgClip=\"text\"\n                            fontSize=\"2xl\"\n                            fontWeight=\"semibold\"\n                        >\n                            Setting your outputs\n                        </Text>\n                    </ModalHeader>\n                    <Box style={{ overflowX: \"auto\" }} mb=\"5\" bg=\"#2866ca38\">\n                        <Table variant=\"simple\">\n                            <TableCaption>Invoice for {\"Example\"}</TableCaption>\n                            <Thead>\n                                <Tr>\n                                    {thList.th.map((x) => x.element)}\n                                    <Th>\n                                        <a className=\"icons\" onClick={addNewList} href=\"#\">\n                                            <Icon fontSize=\"2xl\" as={PlusSquareIcon} mb=\"2\" />\n                                        </a>\n                                    </Th>\n                                </Tr>\n                            </Thead>\n                            <Tbody>\n                                <Tr>\n                                    {thList.td.map((x) => x.element)}\n                                </Tr>\n                            </Tbody>\n                        </Table>\n                    </Box>\n                    <a onClick={e => {\n                        setHide(false)\n                        window.sessionStorage.setItem(\"show\", true)\n                    }} href=\"#\">\n                        <Text\n                            pl=\"7\"\n                            bgGradient=\"linear(to-l, #7928CA,#2866ca)\"\n                            bgClip=\"text\"\n                            fontSize=\"sm\"\n                            fontWeight=\"semibold\"\n                        >\n                            I don't need set my outputs\n                        </Text>\n                    </a>\n                    <ModalFooter>\n                        <Button\n                            id=\"save-btn\"\n                            w=\"100%\"\n                            mb=\"5\"\n                            onClick={e => {\n                                const btn = document.getElementById(\"save-btn\")\n                                btn.setAttribute(\"disabled\", \"\")\n                                btn.innerHTML = \"Your settings are saving...\"\n                                window.sessionStorage.setItem(\"show\", false)\n                                setTimeout(() => setHide(false), 1000);\n                            }}\n                            colorScheme=\"blue\"\n                            size=\"lg\"\n                            borderRadius=\"md\"\n                            colorScheme=\"blue\"\n                        >\n                            Save this template\n                        </Button>\n                    </ModalFooter>\n                </ModalContent>\n            </Modal>\n        </>\n    )\n}","/home/jack5341/jack5341/projects/invoice-printer/src/containers/template-item/th-section/th.section.jsx",["57","58"],"import {useState} from 'react'\nimport {\n    Th,\n    Kbd,\n    Icon,\n    Editable,\n    EditableInput,\n    EditablePreview,\n} from \"@chakra-ui/react\"\nimport { CloseIcon } from '@chakra-ui/icons'\n\nexport default function ThSection(props) {\n    return (\n        <Th id={props.uniqueId}>\n            <a className=\"icons\" onClick={(e) => {\n                e.preventDefault()\n                if(props.setUniqueId){\n                    props.setUniqueId(props.uniqueId)\n                }\n                return null\n            }} href=\"#\"><Icon as={CloseIcon} mb=\"2\" />\n            </a>\n            <Editable defaultValue=\"Enter a title\">\n                <Kbd>\n                    <EditablePreview />\n                </Kbd>\n                <EditableInput onChange={(e) => window.localStorage.setItem(\"list/\" + props.uniqueId, e.target.value) }/>\n            </Editable>\n        </Th>\n    )\n}","/home/jack5341/jack5341/projects/invoice-printer/src/containers/template-item/td-section/td.section.jsx",[],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":31,"column":44,"nodeType":"65","messageId":"66","endLine":31,"endColumn":46},{"ruleId":"63","severity":1,"message":"64","line":47,"column":32,"nodeType":"65","messageId":"66","endLine":47,"endColumn":34},{"ruleId":"63","severity":1,"message":"64","line":22,"column":55,"nodeType":"65","messageId":"66","endLine":22,"endColumn":57},{"ruleId":"63","severity":1,"message":"64","line":30,"column":61,"nodeType":"65","messageId":"66","endLine":30,"endColumn":63},{"ruleId":"67","severity":1,"message":"68","line":14,"column":9,"nodeType":"69","endLine":14,"endColumn":54},{"ruleId":"67","severity":1,"message":"68","line":18,"column":17,"nodeType":"69","endLine":18,"endColumn":29},{"ruleId":"67","severity":1,"message":"68","line":100,"column":41,"nodeType":"69","endLine":100,"endColumn":92},{"ruleId":"67","severity":1,"message":"68","line":113,"column":21,"nodeType":"69","endLine":116,"endColumn":33},{"ruleId":"70","severity":1,"message":"71","line":142,"column":29,"nodeType":"72","endLine":142,"endColumn":47},{"ruleId":"73","severity":1,"message":"74","line":1,"column":9,"nodeType":"75","messageId":"76","endLine":1,"endColumn":17},{"ruleId":"67","severity":1,"message":"68","line":15,"column":13,"nodeType":"69","endLine":21,"endColumn":25},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]