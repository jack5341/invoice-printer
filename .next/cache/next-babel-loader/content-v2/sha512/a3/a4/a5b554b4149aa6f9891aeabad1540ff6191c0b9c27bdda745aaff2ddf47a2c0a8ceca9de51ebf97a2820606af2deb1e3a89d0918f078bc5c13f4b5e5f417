{"ast":null,"code":"import _defineProperty from \"/home/jack5341/jack5341/projects/invoice-printer/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/jack5341/jack5341/projects/invoice-printer/components/upload/upload.jsx\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Box, useToast, Container, Flex, Spacer, Input, Button, Icon } from \"@chakra-ui/react\";\nimport { DownloadIcon, DeleteIcon } from \"@chakra-ui/icons\";\nimport { useEffect, useState } from \"react\";\nimport { useMediaQuery } from \"react-responsive\";\nimport readXlsxFile from \"read-excel-file\";\nimport Result from \"./result/result\";\nvar excel = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\";\nvar csv = \"text/csv\";\nexport default function Upload() {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState(null),\n      items = _useState[0],\n      setItems = _useState[1];\n\n  var _useState2 = useState(false),\n      isUpload = _useState2[0],\n      setIsUpload = _useState2[1];\n\n  var isMobile = useMediaQuery({\n    query: \"(max-width: 580px)\"\n  });\n  var toast = useToast();\n  useEffect(function () {\n    return items ? setIsUpload(true) : setIsUpload(false);\n  }, [items]);\n\n  function parseFile(file) {\n    if (!file) toast({\n      title: \"File upload failed\",\n      status: \"warning\",\n      position: \"top-left\",\n      isClosable: true\n    });\n    if (!file.type === excel && !file.type === csv) toast({\n      title: \"Wrong file type\",\n      status: \"error\",\n      position: \"top-left\",\n      isClosable: true\n    });\n\n    switch (file.type) {\n      case excel:\n        readXlsxFile(file).then(function (rows) {\n          setItems(rows);\n        });\n        setIsUpload(true);\n        break;\n\n      case csv:\n        var fileReader = new FileReader();\n\n        fileReader.onloadend = function (e) {\n          setItems(fileReader.result.toString().split(\"\\n\").map(function (e) {\n            return e.trim();\n          }).map(function (e) {\n            return e.split(\",\").map(function (e) {\n              return e.trim();\n            });\n          }));\n        };\n\n        setIsUpload(true);\n        break;\n\n      default:\n        toast({\n          title: \"Somethings were wrong\",\n          status: \"error\",\n          position: \"top-left\",\n          isClosable: true\n        });\n        break;\n    }\n  }\n\n  var CircleIcon = function CircleIcon(props) {\n    return /*#__PURE__*/_jsxDEV(Icon, _objectSpread(_objectSpread({\n      viewBox: \"0 0 200 200\"\n    }, props), {}, {\n      children: /*#__PURE__*/_jsxDEV(\"path\", {\n        fill: \"currentColor\",\n        d: \"M 100, 100 m -75, 0 a 75,75 0 1,0 150,0 a 75,75 0 1,0 -150,0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }, _this)\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }, _this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      padding: isMobile ? \"0.5rem\" : \"1rem\",\n      borderRadius: \"0.5rem\",\n      border: \"1px solid gray\",\n      children: /*#__PURE__*/_jsxDEV(Flex, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          children: /*#__PURE__*/_jsxDEV(CircleIcon, {\n            boxSize: isMobile ? 8 : 10,\n            color: isUpload ? \"green.400\" : \"red.400\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Spacer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            type: \"file\",\n            id: \"doc-input\",\n            accept: \".xlsx, .csv\",\n            onChange: function onChange(e) {\n              return parseFile(e.target.files[0]);\n            },\n            name: \"doc\",\n            display: \"none\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), isUpload ? /*#__PURE__*/_jsxDEV(Button, {\n            _focus: \"none\",\n            onClick: function onClick() {\n              setItems(null);\n              document.getElementById(\"doc-input\").value = null;\n            },\n            rightIcon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 28\n            }, this),\n            size: isMobile ? \"sm\" : \"md\",\n            colorScheme: \"red\",\n            children: \"Delete File\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Button, {\n            _focus: \"none\",\n            onClick: function onClick() {\n              return document.getElementById(\"doc-input\").click();\n            },\n            rightIcon: /*#__PURE__*/_jsxDEV(DownloadIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 28\n            }, this),\n            size: isMobile ? \"sm\" : \"md\",\n            colorScheme: \"green\",\n            children: \"Upload Your File\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), items ? items.slice(1).map(function (element, index) {\n      return /*#__PURE__*/_jsxDEV(Result, {\n        label: items[0],\n        items: element\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 15\n      }, _this);\n    }) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Upload, \"Oz1JFdje6w8h23eC088odYBhDuc=\", false, function () {\n  return [useMediaQuery, useToast];\n});\n\n_c = Upload;\n\nvar _c;\n\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"sources":["/home/jack5341/jack5341/projects/invoice-printer/components/upload/upload.jsx"],"names":["Box","useToast","Container","Flex","Spacer","Input","Button","Icon","DownloadIcon","DeleteIcon","useEffect","useState","useMediaQuery","readXlsxFile","Result","excel","csv","Upload","items","setItems","isUpload","setIsUpload","isMobile","query","toast","parseFile","file","title","status","position","isClosable","type","then","rows","fileReader","FileReader","onloadend","e","result","toString","split","map","trim","CircleIcon","props","target","files","document","getElementById","value","click","slice","element","index"],"mappings":"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","sourcesContent":["import {\n  Box,\n  useToast,\n  Container,\n  Flex,\n  Spacer,\n  Input,\n  Button,\n  Icon,\n} from \"@chakra-ui/react\";\nimport { DownloadIcon, DeleteIcon } from \"@chakra-ui/icons\";\nimport { useEffect, useState } from \"react\";\nimport { useMediaQuery } from \"react-responsive\";\nimport readXlsxFile from \"read-excel-file\";\n\nimport Result from \"./result/result\";\n\nconst excel =\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\";\nconst csv = \"text/csv\";\n\nexport default function Upload() {\n  const [items, setItems] = useState(null);\n  const [isUpload, setIsUpload] = useState(false);\n  const isMobile = useMediaQuery({ query: \"(max-width: 580px)\" });\n  const toast = useToast();\n\n  useEffect(() => (items ? setIsUpload(true) : setIsUpload(false)), [items]);\n\n  function parseFile(file) {\n    if (!file)\n      toast({\n        title: \"File upload failed\",\n        status: \"warning\",\n        position: \"top-left\",\n        isClosable: true,\n      });\n\n    if (!file.type === excel && !file.type === csv)\n      toast({\n        title: \"Wrong file type\",\n        status: \"error\",\n        position: \"top-left\",\n        isClosable: true,\n      });\n\n    switch (file.type) {\n      case excel:\n        readXlsxFile(file).then((rows) => {\n          setItems(rows);\n        });\n        setIsUpload(true);\n        break;\n\n      case csv:\n        let fileReader = new FileReader();\n        fileReader.onloadend = (e) => {\n          setItems(\n            fileReader.result\n              .toString()\n              .split(\"\\n\")\n              .map((e) => e.trim())\n              .map((e) => e.split(\",\").map((e) => e.trim()))\n          );\n        };\n        setIsUpload(true);\n        break;\n\n      default:\n        toast({\n          title: \"Somethings were wrong\",\n          status: \"error\",\n          position: \"top-left\",\n          isClosable: true,\n        });\n        break;\n    }\n  }\n\n  const CircleIcon = (props) => (\n    <Icon viewBox=\"0 0 200 200\" {...props}>\n      <path\n        fill=\"currentColor\"\n        d=\"M 100, 100 m -75, 0 a 75,75 0 1,0 150,0 a 75,75 0 1,0 -150,0\"\n      />\n    </Icon>\n  );\n\n  return (\n    <Box>\n      <Box\n        padding={isMobile ? \"0.5rem\" : \"1rem\"}\n        borderRadius=\"0.5rem\"\n        border=\"1px solid gray\"\n      >\n        <Flex>\n          <Box>\n            <CircleIcon\n              boxSize={isMobile ? 8 : 10}\n              color={isUpload ? \"green.400\" : \"red.400\"}\n            />\n          </Box>\n          <Spacer />\n          <Box>\n            <Input\n              type=\"file\"\n              id=\"doc-input\"\n              accept=\".xlsx, .csv\"\n              onChange={(e) => parseFile(e.target.files[0])}\n              name=\"doc\"\n              display=\"none\"\n            />\n            {isUpload ? (\n              <Button\n                _focus=\"none\"\n                onClick={() => {\n                  setItems(null);\n                  document.getElementById(\"doc-input\").value = null;\n                }}\n                rightIcon={<DeleteIcon />}\n                size={isMobile ? \"sm\" : \"md\"}\n                colorScheme=\"red\"\n              >\n                Delete File\n              </Button>\n            ) : (\n              <Button\n                _focus=\"none\"\n                onClick={() => document.getElementById(\"doc-input\").click()}\n                rightIcon={<DownloadIcon />}\n                size={isMobile ? \"sm\" : \"md\"}\n                colorScheme=\"green\"\n              >\n                Upload Your File\n              </Button>\n            )}\n          </Box>\n        </Flex>\n      </Box>\n      {items\n        ? items\n            .slice(1)\n            .map((element, index) => (\n              <Result key={index} label={items[0]} items={element} />\n            ))\n        : null}\n    </Box>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}