{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/jack5341/jack5341/projects/invoice-printer/components/upload/upload.jsx\";\nimport { Box, useToast, FormControl, FormLabel, Text, Input, Icon } from \"@chakra-ui/react\";\nimport { DownloadIcon, DeleteIcon, InfoIcon } from \"@chakra-ui/icons\";\nimport { useEffect, useState } from \"react\";\nimport { useMediaQuery } from \"react-responsive\";\nimport readXlsxFile from \"read-excel-file\";\nimport Result from \"./result/result\";\nconst excel = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\";\nconst csv = \"text/csv\";\nexport default function Upload(props) {\n  const {\n    0: items,\n    1: setItems\n  } = useState(null);\n  const {\n    0: isUpload,\n    1: setIsUpload\n  } = useState(false);\n  const isTablet = useMediaQuery({\n    query: \"(max-width: 1024px)\"\n  });\n  const isMobileXL = useMediaQuery({\n    query: \"(max-width: 600px)\"\n  });\n  const toast = useToast();\n  useEffect(() => items ? setIsUpload(true) : setIsUpload(false), [items]);\n\n  function handleFile(file) {\n    if (!file) toast({\n      title: \"File upload failed\",\n      status: \"warning\",\n      position: \"top-left\",\n      isClosable: true\n    });\n    if (!file.type === excel && !file.type === csv) toast({\n      title: \"Wrong file type\",\n      status: \"error\",\n      position: \"top-left\",\n      isClosable: true\n    });\n\n    switch (file.type) {\n      case excel:\n        readXlsxFile(file).then(rows => {\n          setItems(rows);\n        });\n        setIsUpload(true);\n        break;\n\n      case csv:\n        let fileReader = new FileReader();\n\n        fileReader.onloadend = e => {\n          setItems(fileReader.result.toString().split(\"\\n\").map(e => e.trim()).map(e => e.split(\",\").map(e => e.trim())));\n        };\n\n        setIsUpload(true);\n        break;\n\n      default:\n        toast({\n          title: \"Wrong file type\",\n          status: \"error\",\n          position: \"top-left\",\n          isClosable: true\n        });\n        break;\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    padding: (isTablet ? \"0rem\" : \"4rem\") && (isMobileXL ? \"1rem\" : \"4rem\"),\n    paddingTop: isTablet ? \"0rem\" : null,\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      fontSize: (isTablet ? \"xl\" : \"2xl\") && (isMobileXL ? \"md\" : \"2xl\"),\n      children: [/*#__PURE__*/_jsxDEV(InfoIcon, {\n        mr: \"0.5rem\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), \" You can drag your file to this box for parsing your file.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      borderRadius: \"0.5rem\",\n      border: \"2px dashed gray\",\n      mt: \"3\",\n      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n        color: props.colorMode === \"light\" ? \"#094223\" : \"white\",\n        p: \"1rem\",\n        opacity: \"0.5\",\n        fontSize: isMobileXL ? \"md\" : \"2xl\",\n        textAlign: \"center\",\n        fontWeight: \"bold\",\n        children: [isUpload ? /*#__PURE__*/_jsxDEV(CheckIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 23\n        }, this) : /*#__PURE__*/_jsxDEV(DownloadIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 39\n        }, this), \" Upload your file\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        onChange: e => handleFile(e.target.files[0]),\n        type: \"file\",\n        accept: \".png\",\n        visibility: \"hidden\" //   disabled\n        ,\n        border: \"0px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this) // <Box>\n  //   <Box\n  //     padding={isMobile ? \"0.5rem\" : \"1rem\"}\n  //     borderRadius=\"0.5rem\"\n  //     border=\"1px solid gray\"\n  //   >\n  //     <Flex>\n  //       <Box>\n  //         <CircleIcon\n  //           boxSize={isMobile ? 8 : 10}\n  //           color={isUpload ? \"green.400\" : \"red.400\"}\n  //         />\n  //       </Box>\n  //       <Spacer />\n  //       <Box>\n  //         <Input\n  //           type=\"file\"\n  //           id=\"doc-input\"\n  //           accept=\".xlsx, .csv\"\n  //           onChange={(e) => parseFile(e.target.files[0])}\n  //           name=\"doc\"\n  //           display=\"none\"\n  //         />\n  //         {isUpload ? (\n  //           <Button\n  //             _focus=\"none\"\n  //             onClick={() => {\n  //               setItems(null);\n  //               document.getElementById(\"doc-input\").value = null;\n  //             }}\n  //             rightIcon={<DeleteIcon />}\n  //             size={isMobile ? \"sm\" : \"md\"}\n  //             colorScheme=\"red\"\n  //           >\n  //             Delete File\n  //           </Button>\n  //         ) : (\n  //           <Button\n  //             _focus=\"none\"\n  //             onClick={() => document.getElementById(\"doc-input\").click()}\n  //             rightIcon={<DownloadIcon />}\n  //             size={isMobile ? \"sm\" : \"md\"}\n  //             colorScheme=\"green\"\n  //           >\n  //             Upload Your File\n  //           </Button>\n  //         )}\n  //       </Box>\n  //     </Flex>\n  //   </Box>\n  //   {items\n  //     ? items\n  //         .slice(1)\n  //         .map((element, index) => (\n  //           <Result key={index} label={items[0]} items={element} />\n  //         ))\n  //     : null}\n  // </Box>\n  ;\n}","map":{"version":3,"sources":["/home/jack5341/jack5341/projects/invoice-printer/components/upload/upload.jsx"],"names":["Box","useToast","FormControl","FormLabel","Text","Input","Icon","DownloadIcon","DeleteIcon","InfoIcon","useEffect","useState","useMediaQuery","readXlsxFile","Result","excel","csv","Upload","props","items","setItems","isUpload","setIsUpload","isTablet","query","isMobileXL","toast","handleFile","file","title","status","position","isClosable","type","then","rows","fileReader","FileReader","onloadend","e","result","toString","split","map","trim","colorMode","target","files"],"mappings":"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","sourcesContent":["import {\n  Box,\n  useToast,\n  FormControl,\n  FormLabel,\n  Text,\n  Input,\n  Icon,\n} from \"@chakra-ui/react\";\nimport { DownloadIcon, DeleteIcon, InfoIcon } from \"@chakra-ui/icons\";\nimport { useEffect, useState } from \"react\";\nimport { useMediaQuery } from \"react-responsive\";\nimport readXlsxFile from \"read-excel-file\";\n\nimport Result from \"./result/result\";\n\nconst excel =\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\";\nconst csv = \"text/csv\";\n\nexport default function Upload(props) {\n  const [items, setItems] = useState(null);\n  const [isUpload, setIsUpload] = useState(false);\n  const isTablet = useMediaQuery({ query: \"(max-width: 1024px)\" });\n  const isMobileXL = useMediaQuery({ query: \"(max-width: 600px)\" });\n  const toast = useToast();\n\n    useEffect(() => (items ? setIsUpload(true) : setIsUpload(false)), [items]);\n\n  function handleFile(file) {\n    if (!file)\n      toast({\n        title: \"File upload failed\",\n        status: \"warning\",\n        position: \"top-left\",\n        isClosable: true,\n      });\n\n    if (!file.type === excel && !file.type === csv)\n      toast({\n        title: \"Wrong file type\",\n        status: \"error\",\n        position: \"top-left\",\n        isClosable: true,\n      });\n\n    switch (file.type) {\n      case excel:\n        readXlsxFile(file).then((rows) => {\n          setItems(rows);\n        });\n        setIsUpload(true);\n        break;\n\n      case csv:\n        let fileReader = new FileReader();\n        fileReader.onloadend = (e) => {\n          setItems(\n            fileReader.result\n              .toString()\n              .split(\"\\n\")\n              .map((e) => e.trim())\n              .map((e) => e.split(\",\").map((e) => e.trim()))\n          );\n        };\n        setIsUpload(true);\n        break;\n\n      default:\n        toast({\n          title: \"Wrong file type\",\n          status: \"error\",\n          position: \"top-left\",\n          isClosable: true,\n        });\n        break;\n    }\n  }\n\n  return (\n    <Box padding={(isTablet ? \"0rem\" : \"4rem\") && (isMobileXL ? \"1rem\" : \"4rem\")} paddingTop={isTablet ? \"0rem\" : null}>\n    <Text fontSize={(isTablet ? \"xl\" : \"2xl\") && (isMobileXL ? \"md\" : \"2xl\")}>\n        <InfoIcon mr=\"0.5rem\"/> You can drag your file to this box for parsing your file.\n    </Text>\n      <FormControl borderRadius=\"0.5rem\" border=\"2px dashed gray\" mt=\"3\">\n        <FormLabel\n          color={props.colorMode === \"light\" ? \"#094223\" : \"white\"}\n          p=\"1rem\"\n          opacity=\"0.5\"\n          fontSize={isMobileXL ? \"md\" : \"2xl\"}\n          textAlign=\"center\"\n          fontWeight=\"bold\"\n        >\n          {isUpload ? <CheckIcon /> : <DownloadIcon />} Upload your file\n        </FormLabel>\n        <Input\n          onChange={(e) => handleFile(e.target.files[0])}\n          type=\"file\"\n          accept=\".png\"\n          visibility=\"hidden\"\n        //   disabled\n          border=\"0px\"\n        />\n      </FormControl>\n    </Box>\n    // <Box>\n    //   <Box\n    //     padding={isMobile ? \"0.5rem\" : \"1rem\"}\n    //     borderRadius=\"0.5rem\"\n    //     border=\"1px solid gray\"\n    //   >\n    //     <Flex>\n    //       <Box>\n    //         <CircleIcon\n    //           boxSize={isMobile ? 8 : 10}\n    //           color={isUpload ? \"green.400\" : \"red.400\"}\n    //         />\n    //       </Box>\n    //       <Spacer />\n    //       <Box>\n    //         <Input\n    //           type=\"file\"\n    //           id=\"doc-input\"\n    //           accept=\".xlsx, .csv\"\n    //           onChange={(e) => parseFile(e.target.files[0])}\n    //           name=\"doc\"\n    //           display=\"none\"\n    //         />\n    //         {isUpload ? (\n    //           <Button\n    //             _focus=\"none\"\n    //             onClick={() => {\n    //               setItems(null);\n    //               document.getElementById(\"doc-input\").value = null;\n    //             }}\n    //             rightIcon={<DeleteIcon />}\n    //             size={isMobile ? \"sm\" : \"md\"}\n    //             colorScheme=\"red\"\n    //           >\n    //             Delete File\n    //           </Button>\n    //         ) : (\n    //           <Button\n    //             _focus=\"none\"\n    //             onClick={() => document.getElementById(\"doc-input\").click()}\n    //             rightIcon={<DownloadIcon />}\n    //             size={isMobile ? \"sm\" : \"md\"}\n    //             colorScheme=\"green\"\n    //           >\n    //             Upload Your File\n    //           </Button>\n    //         )}\n    //       </Box>\n    //     </Flex>\n    //   </Box>\n    //   {items\n    //     ? items\n    //         .slice(1)\n    //         .map((element, index) => (\n    //           <Result key={index} label={items[0]} items={element} />\n    //         ))\n    //     : null}\n    // </Box>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}