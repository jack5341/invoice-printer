{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Box, useToast, FormControl, FormLabel, Text, Input, Button, Collapse, useColorMode } from \"@chakra-ui/react\";\nimport { DownloadIcon, DeleteIcon, InfoIcon, CheckIcon } from \"@chakra-ui/icons\";\nimport { useEffect, useState, useContext } from \"react\";\nimport { useMediaQuery } from \"react-responsive\";\nimport readXlsxFile from \"read-excel-file\";\nimport Result from \"./result/result\";\nvar excel = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\";\nvar csv = \"text/csv\";\nimport { ItemStore } from \"../../context/itemStore\";\nexport default function Upload(props) {\n  var value = useContext(ItemStore);\n\n  var _useColorMode = useColorMode(),\n      colorMode = _useColorMode.colorMode;\n\n  var _useState = useState(null),\n      items = _useState[0],\n      setItems = _useState[1];\n\n  var _useState2 = useState(false),\n      isUpload = _useState2[0],\n      setIsUpload = _useState2[1];\n\n  var isTablet = useMediaQuery({\n    query: \"(max-width: 1024px)\"\n  });\n  var isMobileXL = useMediaQuery({\n    query: \"(max-width: 600px)\"\n  });\n  var toast = useToast();\n  useEffect(function () {\n    return items ? setIsUpload(true) : setIsUpload(false);\n  }, [items]);\n\n  function handleFile(file) {\n    if (!file) return toast({\n      title: \"File upload failed\",\n      status: \"warning\",\n      position: \"top-left\",\n      isClosable: true\n    });\n    if (!file.type === excel && !file.type === csv) return toast({\n      title: \"Wrong file type\",\n      status: \"error\",\n      position: \"top-left\",\n      isClosable: true\n    });\n\n    switch (file.type) {\n      case excel:\n        readXlsxFile(file).then(function (rows) {\n          value.setvalue(rows);\n        });\n        setIsUpload(true);\n        break;\n\n      case csv:\n        var fileReader = new FileReader();\n\n        fileReader.onloadend = function (e) {\n          value.setvalue(fileReader.result.toString().split(\"\\n\").map(function (e) {\n            return e.trim();\n          }).map(function (e) {\n            return e.split(\",\").map(function (e) {\n              return e.trim();\n            });\n          }));\n        };\n\n        setIsUpload(true);\n        break;\n\n      default:\n        toast({\n          title: \"Wrong file type\",\n          status: \"error\",\n          position: \"top-left\",\n          isClosable: true\n        });\n        break;\n    }\n  }\n\n  return /*#__PURE__*/_jsxs(Box, {\n    padding: (isTablet ? \"0rem\" : \"4rem\") && (isMobileXL ? \"1rem\" : \"4rem\"),\n    paddingTop: isTablet ? \"0rem\" : null,\n    borderLeft: isMobileXL ? \"0\" : \"1px solid gray\",\n    children: [/*#__PURE__*/_jsxs(Text, {\n      color: colorMode === \"light\" ? \"#107c41\" : \"white\",\n      fontSize: (isTablet ? \"xl\" : \"2xl\") && (isMobileXL ? \"md\" : \"2xl\"),\n      children: [/*#__PURE__*/_jsx(InfoIcon, {\n        mr: \"0.5rem\"\n      }), \" \", props.texts.uploadlayer]\n    }), /*#__PURE__*/_jsx(Collapse, {\n      \"in\": isUpload,\n      animateOpacity: true,\n      children: /*#__PURE__*/_jsx(Button, {\n        mt: \"2\",\n        _focus: \"none\",\n        onClick: function onClick() {\n          value.setvalue(null);\n          setIsUpload(false);\n          document.getElementsByClassName(\"docs\").value = null;\n        },\n        size: isMobileXL ? \"sm\" : \"md\",\n        leftIcon: /*#__PURE__*/_jsx(DeleteIcon, {}),\n        colorScheme: \"green\",\n        display: \"block\",\n        w: \"100%\",\n        children: \"Delete\"\n      })\n    }), /*#__PURE__*/_jsxs(FormControl, {\n      borderRadius: \"0.5rem\",\n      border: \"2px dashed gray\",\n      mt: \"3\",\n      children: [/*#__PURE__*/_jsxs(FormLabel, {\n        color: colorMode === \"light\" ? \"#107c41\" : \"white\",\n        p: \"1rem\",\n        fontWeight: \"bold\",\n        fontSize: isMobileXL ? \"md\" : \"2xl\",\n        children: [isUpload ? /*#__PURE__*/_jsx(CheckIcon, {}) : /*#__PURE__*/_jsx(DownloadIcon, {}), \" Upload your file\"]\n      }), /*#__PURE__*/_jsx(Input, {\n        className: \"docs\",\n        onChange: function onChange(e) {\n          return handleFile(e.target.files[0]);\n        },\n        type: \"file\",\n        opacity: \"0\",\n        accept: \".xlsx, .csv\",\n        border: \"0px\"\n      })]\n    }), value.value ? value.value.slice(1).map(function (element, index) {\n      return /*#__PURE__*/_jsx(Result, {\n        label: value.value[0],\n        items: element\n      }, index);\n    }) : null]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}