{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/jack5341/jack5341/projects/invoice-printer/components/upload/upload.jsx\",\n    _s = $RefreshSig$();\n\nimport { Box, useToast, FormControl, FormLabel, Text, Input, Button, Collapse, useColorMode, Divider } from \"@chakra-ui/react\";\nimport { DownloadIcon, DeleteIcon, InfoIcon, CheckIcon } from \"@chakra-ui/icons\";\nimport { useState, useContext } from \"react\";\nimport readXlsxFile from \"read-excel-file\";\nimport Result from \"./result/result\";\nvar excel = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\";\nvar csv = \"text/csv\";\nimport { ItemStore } from \"../../context/itemStore\";\nexport default function Upload(props) {\n  _s();\n\n  var _this = this;\n\n  var value = useContext(ItemStore);\n\n  var _useColorMode = useColorMode(),\n      colorMode = _useColorMode.colorMode;\n\n  var _useState = useState(false),\n      isUpload = _useState[0],\n      setIsUpload = _useState[1];\n\n  var toast = useToast();\n\n  function handleFile(file) {\n    if (!file) return toast({\n      title: \"File upload failed\",\n      status: \"warning\",\n      position: \"top-left\",\n      isClosable: true\n    });\n    if (!file.type === excel && !file.type === csv) return toast({\n      title: \"Wrong file type\",\n      status: \"error\",\n      position: \"top-left\",\n      isClosable: true\n    });\n\n    switch (file.type) {\n      case excel:\n        readXlsxFile(file).then(function (rows) {\n          value.setvalue(rows);\n        });\n        setIsUpload(true);\n        break;\n\n      case csv:\n        var fileReader = new FileReader();\n\n        fileReader.onloadend = function (e) {\n          value.setvalue(fileReader.result.toString().split(\"\\n\").map(function (e) {\n            return e.trim();\n          }).map(function (e) {\n            return e.split(\",\").map(function (e) {\n              return e.trim();\n            });\n          }));\n        };\n\n        setIsUpload(true);\n        break;\n\n      default:\n        toast({\n          title: \"Wrong file type\",\n          status: \"error\",\n          position: \"top-left\",\n          isClosable: true\n        });\n        break;\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: \"upload-container\",\n    padding: \"4rem\",\n    borderLeft: \"1px solid gray\",\n    children: [/*#__PURE__*/_jsxDEV(Divider, {\n      className: \"upload-section-divider\",\n      display: \"none\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      className: \"upload-layer\",\n      color: colorMode === \"light\" ? \"#107c41\" : \"white\",\n      fontSize: \"2xl\",\n      children: [/*#__PURE__*/_jsxDEV(InfoIcon, {\n        mr: \"0.5rem\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), \" \", props.texts.uploadlayer]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n      \"in\": isUpload,\n      animateOpacity: true,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        className: \"upload-delete-btn\",\n        mt: \"2\",\n        _focus: \"none\",\n        onClick: function onClick() {\n          value.setvalue(null);\n          setIsUpload(false);\n          document.getElementsByClassName(\"docs\").value = null;\n        },\n        size: \"md\",\n        leftIcon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this),\n        colorScheme: \"green\",\n        display: \"block\",\n        w: \"100%\",\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      borderRadius: \"0.5rem\",\n      border: \"2px dashed gray\",\n      mt: \"3\",\n      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n        color: colorMode === \"light\" ? \"#107c41\" : \"white\",\n        p: \"1rem\",\n        fontWeight: \"bold\",\n        className: \"form-layer\",\n        fontSize: \"2xl\",\n        children: [isUpload ? /*#__PURE__*/_jsxDEV(CheckIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 23\n        }, this) : /*#__PURE__*/_jsxDEV(DownloadIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 39\n        }, this), \" Upload your file\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        className: \"docs\",\n        onChange: function onChange(e) {\n          return handleFile(e.target.files[0]);\n        },\n        type: \"file\",\n        opacity: \"0\",\n        accept: \".xlsx, .csv\",\n        border: \"0px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), value.value ? value.value.slice(1).map(function (element, index) {\n      return /*#__PURE__*/_jsxDEV(Result, {\n        label: value.value[0],\n        items: element\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 15\n      }, _this);\n    }) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Upload, \"ouNy0VPUVfKSJu7DZk692vTCy2o=\", false, function () {\n  return [useColorMode, useToast];\n});\n\n_c = Upload;\n\nvar _c;\n\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"sources":["/home/jack5341/jack5341/projects/invoice-printer/components/upload/upload.jsx"],"names":["Box","useToast","FormControl","FormLabel","Text","Input","Button","Collapse","useColorMode","Divider","DownloadIcon","DeleteIcon","InfoIcon","CheckIcon","useState","useContext","readXlsxFile","Result","excel","csv","ItemStore","Upload","props","value","colorMode","isUpload","setIsUpload","toast","handleFile","file","title","status","position","isClosable","type","then","rows","setvalue","fileReader","FileReader","onloadend","e","result","toString","split","map","trim","texts","uploadlayer","document","getElementsByClassName","target","files","slice","element","index"],"mappings":"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","sourcesContent":["import {\n  Box,\n  useToast,\n  FormControl,\n  FormLabel,\n  Text,\n  Input,\n  Button,\n  Collapse,\n  useColorMode,\n  Divider\n} from \"@chakra-ui/react\";\nimport {\n  DownloadIcon,\n  DeleteIcon,\n  InfoIcon,\n  CheckIcon,\n} from \"@chakra-ui/icons\";\nimport { useState, useContext } from \"react\";\nimport readXlsxFile from \"read-excel-file\";\n\nimport Result from \"./result/result\";\n\nconst excel =\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\";\nconst csv = \"text/csv\";\n\nimport { ItemStore } from \"../../context/itemStore\"\n\nexport default function Upload(props) {\n  const value = useContext(ItemStore)\n  const { colorMode } = useColorMode();\n  const [isUpload, setIsUpload] = useState(false);\n  const toast = useToast();\n\n  function handleFile(file) {\n\n    if (!file)\n      return toast({\n        title: \"File upload failed\",\n        status: \"warning\",\n        position: \"top-left\",\n        isClosable: true,\n      });\n\n    if (!file.type === excel && !file.type === csv)\n      return toast({\n        title: \"Wrong file type\",\n        status: \"error\",\n        position: \"top-left\",\n        isClosable: true,\n      });\n\n    switch (file.type) {\n      case excel:\n        readXlsxFile(file).then((rows) => {\n          value.setvalue(rows);\n        });\n        setIsUpload(true);\n        break;\n\n      case csv:\n        let fileReader = new FileReader();\n        fileReader.onloadend = (e) => {\n          value.setvalue(\n            fileReader.result\n              .toString()\n              .split(\"\\n\")\n              .map((e) => e.trim())\n              .map((e) => e.split(\",\").map((e) => e.trim()))\n          );\n        };\n        setIsUpload(true);\n        break;\n\n      default:\n        toast({\n          title: \"Wrong file type\",\n          status: \"error\",\n          position: \"top-left\",\n          isClosable: true,\n        });\n        break;\n    }\n  }\n\n  return (\n    <Box\n      className=\"upload-container\"\n      padding=\"4rem\"\n      borderLeft=\"1px solid gray\"\n    >\n      <Divider className=\"upload-section-divider\" display=\"none\"/>\n      <Text\n        className=\"upload-layer\"\n        color={colorMode === \"light\" ? \"#107c41\" : \"white\"}\n        fontSize=\"2xl\"\n      >\n        <InfoIcon mr=\"0.5rem\" /> {props.texts.uploadlayer}\n      </Text>\n      <Collapse in={isUpload} animateOpacity>\n        <Button\n          className=\"upload-delete-btn\"\n          mt=\"2\"\n          _focus=\"none\"\n          onClick={() => {\n            value.setvalue(null);\n            setIsUpload(false);\n            document.getElementsByClassName(\"docs\").value = null;\n          }}\n          size=\"md\"\n          leftIcon={<DeleteIcon />}\n          colorScheme=\"green\"\n          display=\"block\"\n          w=\"100%\"\n        >\n          Delete\n        </Button>\n      </Collapse>\n      <FormControl\n        borderRadius=\"0.5rem\"\n        border=\"2px dashed gray\"\n        mt=\"3\"\n      >\n        <FormLabel\n          color={colorMode === \"light\" ? \"#107c41\" : \"white\"}\n          p=\"1rem\"\n          fontWeight=\"bold\"\n          className=\"form-layer\"\n          fontSize=\"2xl\"\n        >\n          {isUpload ? <CheckIcon /> : <DownloadIcon />} Upload your file\n        </FormLabel>\n        <Input\n          className=\"docs\"\n          onChange={(e) => handleFile(e.target.files[0])}\n          type=\"file\"\n          opacity=\"0\"\n          accept=\".xlsx, .csv\"\n          border=\"0px\"\n        />\n      </FormControl>\n      {value.value\n        ? value.value\n            .slice(1)\n            .map((element, index) => (\n              <Result key={index} label={value.value[0]} items={element} />\n            ))\n        : null}\n    </Box>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}